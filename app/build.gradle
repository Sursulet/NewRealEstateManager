plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.sursulet.realestatemanager"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "GOOGLE_MAPS_KEY", realEstateManager_mapsapikey)
        resValue 'string', 'google_maps_key', realEstateManager_mapsapikey

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$core_library_desugaring_version")

    androidTestImplementation("androidx.arch.core:core-testing:$core_testing_version")
    //testImplementation "androidx.test:core-ktx:$test_core_version"
    testImplementation('org.mockito:mockito-core:3.12.4')

    // TRUTH
    androidTestImplementation("com.google.truth:truth:$truth_version")
    testImplementation("com.google.truth:truth:$truth_version")

    // MOCKK
    testImplementation("io.mockk:mockk:$mockk_version")
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    // FRAGMENT
    implementation("androidx.fragment:fragment-ktx:$fragment_version")

    // COROUTINES
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")

    // HILT
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")

    // ROOM
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")

    // RETROFIT
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")

    // MAPS
    implementation("com.google.android.gms:play-services-maps:$google_maps_version")
    implementation("com.google.android.gms:play-services-location:18.0.0")
    implementation("com.google.maps.android:maps-ktx:2.3.0")
    implementation("com.google.maps.android:maps-utils-ktx:2.3.0")

    // GLIDE
    implementation("com.github.bumptech.glide:glide:$glide_version")
    annotationProcessor("com.github.bumptech.glide:compiler:$glide_version")
}

kapt {
    correctErrorTypes = true
}